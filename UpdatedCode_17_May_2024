<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Road Network Simulator</title>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            height: 800px;
            z-index: 0;
        }

        #roadCanvas {
            position: absolute;
            top: 71px;
            left: 0;
            z-index: 1;
        }

        canvas {
            border: 10px solid black;
        }

        #chartContainer {
            top: 800px;
            left: 0;
            width: 100%;
            height: 200px;
        }
    </style>
    <link href="https://unpkg.com/leaflet/dist/leaflet.css" rel="stylesheet">
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <h1>Road Network Simulator</h1>
    <div id="map"></div>
    <canvas id="roadCanvas"></canvas>
    <br>
    <label for="trafficVolume">Traffic Volume (PCU per hour):</label>
    <input id="trafficVolume" type="number" value="50">
    <br>
    <label for="carSplit">Car (% of total PCU):</label>
    <input id="carSplit" type="number" value="30">
    <br>
    <label for="busSplit">Bus (% of total PCU):</label>
    <input id="busSplit" type="number" value="20">
    <br>
    <label for="bikeSplit">Bike (% of total PCU):</label>
    <input id="bikeSplit" type="number" value="25">
    <br>
    <label for="truckSplit">Truck (% of total PCU):</label>
    <input id="truckSplit" type="number" value="25">
    <br>
    <label for="calibrateLength">Calibrate Road Length (meters):</label>
    <input id="calibrateLength" type="number" value="1">
    <br>
    <button onclick="startSimulation()">Start Simulation</button>
    <button onclick="stopSimulation()">Stop Simulation</button>
    <br>
    <button onclick="startDrawingRoad()">Start Drawing Road</button>
    <button onclick="stopDrawingRoad()">Stop Drawing Road</button>
    <button onclick="clearCanvas()">Clear Canvas</button>
    <div id="status">Ready</div>
    <div id="chartContainer">
        <canvas id="chart"></canvas>
    </div>
    <script>
    const map = L.map('map').setView([28.6139, 77.209], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
    const roadCanvas = document.getElementById('roadCanvas');
    roadCanvas.width = map.getSize().x;
    roadCanvas.height = map.getSize().y;
    const ctx = roadCanvas.getContext('2d');

    let roadNetwork = [];
    let cars = [];

    function startSimulation() {
        setInterval(simulateTraffic, 1000 / 60); // 60 frames per second
    }

    function simulateTraffic() {
        const totalPCU = parseInt(document.getElementById('trafficVolume').value);
        generateVehicle('car', parseInt(document.getElementById('carSplit').value) / 100 * totalPCU);
        generateVehicle('bus', parseInt(document.getElementById('busSplit').value) / 100 * totalPCU);
        generateVehicle('bike', parseInt(document.getElementById('bikeSplit').value) / 100 * totalPCU);
        generateVehicle('truck', parseInt(document.getElementById('truckSplit').value) / 100 * totalPCU);
        moveVehicles();
        drawVehicles();
    }

    function generateVehicle(type, count) {
        for (let i = 0; i < count; i++) {
            const x = Math.random() * roadCanvas.width;
            const y = Math.random() * roadCanvas.height;
            cars.push({ x, y, type });
        }
    }

    function moveVehicles() {
        cars.forEach(car => {
            car.x += Math.random() * 5 - 2.5; // Random movement
            car.y += Math.random() * 5 - 2.5;
        });
    }

    function drawVehicles() {
        ctx.clearRect(0, 0, roadCanvas.width, roadCanvas.height);
        cars.forEach(car => {
            switch (car.type) {
                case 'car':
                    ctx.fillStyle = 'blue';
                    ctx.fillRect(car.x, car.y, 20, 10);
                    break;
                case 'bus':
                    ctx.fillStyle = 'yellow';
                    ctx.fillRect(car.x, car.y, 30, 15);
                    break;
                case 'bike':
                    ctx.fillStyle = 'green';
                    ctx.fillRect(car.x, car.y, 15, 5);
                    break;
                case 'truck':
                    ctx.fillStyle = 'red';
                    ctx.fillRect(car.x, car.y, 25, 12);
                    break;
            }
        });
    }
    </script>
</body>
</html>
